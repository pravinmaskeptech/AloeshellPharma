@model Inventory.Models.PRNMain

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="ProductCode" name="ProductCode" value="" />
    <input type="hidden" id="Count" name="Count" value="1001" />    <div class="form-horizontal">
     
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="box box-info">
            <div class="box-header with-border" style="background-color:#3c8dbc; color:white">
                <h3 class="box-title">New PRN Order</h3>
                <div class="box-tools pull-right">
                </div>
            </div>
            <div class="box-body">              
                <div class="row">                 
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">
                                   <strong>PRN No</strong>
                                </div>
                                <div class="col-md-6">
                                    @Html.EditorFor(model => model.PRNNo, new { htmlAttributes = new { @class = "form-control", Autocomplete = "off", data_bv_notempty = "true", @disabled = "disabled", maxlength = "20",  } })
                                </div>
                            </div>
                        </div>                
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-md-4">
                               <strong>Raised Date</strong>
                            </div>
                            <div class="col-md-6">
                                <input type="text" id="RaisedDate" name="RaisedDate" required class="form-control" style="width:100%" autocomplete="off" data_bv_notempty="true" data_bv_notempty_message="Purchase Order Date is required and cannot be empty" />
                            </div>
                        </div>
                    </div>
                 
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-md-4">
                               <strong>Required Date</strong>
                            </div>
                            <div class="col-md-8">
                                <input type="text" id="RequiredDate" name="RequiredDate" required class="form-control" style="width:100%" autocomplete="off" data_bv_notempty="true" data_bv_notempty_message="Purchase Order Date is required and cannot be empty" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-md-4">
                                <strong>Department</strong>
                            </div>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.Department, new SelectList(ViewBag.Dept, "DeptName", "DeptName"), "Select Department", new { @class = "form-control", required = "required", Autocomplete = "off", data_bv_notempty = "true", data_bv_notempty_message = "Department is required and cannot be empty", maxlength = "25" })
                            </div>
                        </div>
                    </div>
                </div>
             
                <div id="orderItems" style="overflow-x: auto;">
                    <table class="table table-responsive" style="width: 100%; overflow-x:auto; white-space:nowrap;">
                        <tr style="background-color:#3c8dbc; color:white">
                            <td>ITEM DETAILS</td>
                            <td>QUANTITY</td>                            
                            <td>&nbsp;</td>
                        </tr>
                        <tr class="mycontainer" id="mainrow">
                            <td>
                                <div class="panel" id="P1">                                   
                                    @Html.EJ().Autocomplete("ProductName").WatermarkText("Select Product Name").Datasource((IEnumerable<Inventory.Models.Products>)ViewBag.products).Width("100%").AutocompleteFields(field => field.Key("ProductCode").Text("ProductName")).HighlightSearch(true).ShowPopupButton(true).Width("100%").ClientSideEvents(e => e.FocusOut("CheckValidProduct"))
                                </div>                               
                            </td>

                            <td>
                                <input type="text" id="OrderQty" class="OrderQty form-control" onkeypress="return event.charCode >= 46 && event.charCode <= 57 && event.charCode != 47" />
                            </td>
                     
                            <td>
                                <input type="button" id="add" value="add" style="width:80px" class="btn btn-success" onclick="AddProduct()" />
                            </td>
                        </tr>
                    </table>
                    <div class="ScrollStyle">
                        <table class="table table-responsive" id="Orderdetails" style="width: 100%; overflow-x:auto; white-space:nowrap;"></table>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-12">
                                <div style="padding:5px 10px; text-align:right">
                                    <input id="submit" type="button" value="Save Order" class="btn btn-warning" style="padding:5px 5px" /> &nbsp;&nbsp;
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {

        try {
            $("#RequiredDate").ejDatePicker({ minDate: new Date(), locale: "en-IN", });
            //var d = new Date();
            //var strDate = d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear();
            //$("#RequiredDate").val(strDate);
        } catch (e) 
            {
        }
        try {
            $("#RaisedDate").ejDatePicker({ maxDate: new Date(), locale: "en-IN", });
            var d = new Date();
            var strDate = d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear();
            $("#RaisedDate").val(strDate);
        } catch (e) {
        }



        $('#PRNNo').val("@ViewBag.PRNNO");
    })

    function CheckValidProduct(Product)
    {
        $('#ProductCode').val('');
        var isduplicate = false;
        $('#Orderdetails tbody tr').each(function (index, e) {
            var inputEl = $(e).children().get(0);
            var Qty = $(e).children().get(1);
            if ($('#ProductName').val() == inputEl.firstElementChild.value) {  
                isduplicate = true;
            }           
        })
        if (isduplicate == true) {
            toastr.warning("product already added");
            $('#ProductName').val('');
            $('#ProductCode').val('');
        }else
            {

            if ($('#ProductName').val() != "") {
                $.ajax({
                    type: "GET",
                    url: '/PRNMains/CheckValidProduct',
                    data: { 'ProductName': $('#ProductName').val() },
                    success: function (result) {
                        debugger;
                        
                        if (result.Message == "success") {
                            $('#ProductCode').val(result.data[0]);
                            $('#OrderQty').focus();
                        }else
                        {
                            $('#ProductCode').val('');
                            $('#ProductName').val('');
                            toastr.error(result.Message);
                        }
                    }
                })
            }else
            {
                toastr.error('Select Product Name');
            }
        }
    }

    function AddProduct() {
        debugger;
        var isduplicate = "";
        var temp = true;

        $('#Orderdetails tbody tr').each(function (index, e) {
            var PrdName = $(e).children().get(0);
            if ($('#ProductName').val() == PrdName.firstElementChild.value) {
                isduplicate = true;
               
            }           
        })

        if (isduplicate == true) {
            toastr.error('Product Name Already Added');
            temp = false;
        }

        if ($('#ProductName').val() == "") {
            toastr.error('Product Name Not Found');
            temp = false;
        }

        if ($('#OrderQty').val() == "") {
            toastr.error('Quantity Not Found');
            temp = false;
        }

        if(temp==true)
            {
            var Count = $('#Count').val();
            $("#Orderdetails").append(" <tbody> <tr id='R" + Count + "'> <td><input type='text' id='ProductName" + Count + "' readonly  class='ProductName form-control'' /></td> <td align:'left'><input type='text' id='Quantity" + Count + "'  readonly class='Quantity form-control'' /></td><td><input type='text' id='ProductCode" + Count + "'  readonly style='display:none' class='ProductCode form-control'' /></td></td> </tr> <tbody>");
            $("#ProductName" + Count + "").val($('#ProductName').val());
            $("#Quantity" + Count + "").val($('#OrderQty').val());
            $("#ProductCode" + Count + "").val($('#ProductCode').val())
            $('#Count').val(Count + 1);
            $('#ProductName').val('');
            $('#OrderQty').val('');
            $('#ProductCode').val('');
        }
    }

    $('#submit').click(function () {
        var temp=true;
        if ($('#RequiredDate').val() == "") {temp=false;toastr.error('Required Date not Found')  } 
        if ($('#RaisedDate').val() == "") {temp=false;toastr.error('Raised Date not Found')  } 
        if ($('#Department').val() == "") {temp=false;toastr.error('Department not Found')  } 
        if ($('#PRNNo').val() == "") {temp=false;toastr.error('PRNNo not Found')  } 
       
           
        if (temp==true) {
            var rowCount = $('#Orderdetails tr').length;
            if (rowCount > 0) {
                var isAllValid = true;
                $('#orderItemError').text('');
                var list = [];
                var errorItemCount = 0;


                var Purchasedate = $('#RaisedDate').val();
                var datearray = Purchasedate.split("/");
                var RaisedDate = datearray[1] + '/' + datearray[0] + '/' + datearray[2];



                var ExpectedDelDate = $('#RequiredDate').val();
                var datearray = ExpectedDelDate.split("/");
                var RequiredDate = datearray[1] + '/' + datearray[0] + '/' + datearray[2];


                $('#Orderdetails tbody tr').each(function (index, ele) {
                   
                        var orderItem = {
                            ProductCode: $('.ProductCode', this).val(),
                            ProductName: $('.ProductName', this).val(),
                            Quantity: $('.Quantity', this).val(),
                          
                            PRNNo: $('#PRNNo').val(),
                            Department: $('#Department').val(),
                           
                            RequiredDate: RequiredDate,
                            RaisedDate: RaisedDate,                           
                        }
                        list.push(orderItem);

                })

                if (isAllValid) {
                    var data = {
                        OrderDetails: list
                    }
                    $(this).val('Please wait...');
                    $.ajax({
                        type: 'POST',
                        url: '/PRNMains/Save',
                        data: JSON.stringify(data),
                        contentType: 'application/json',
                        success: function (result) {
                            $('#submit').val('Save Order');
                            if (result.Message=="success") {
                                toastr.success("Successfully Saved..");
                                window.location.href = "/PRNMains/Index";
                            }
                            else {
                                toastr.error(result.Message);
                            }                           
                        },
                        error: function (error) {
                            console.log(error);
                            $('#submit').val('Save');
                        }
                    });
                }
            } else {
                toastr.error("please add data to list.");
            }
        }
    });
</script>
