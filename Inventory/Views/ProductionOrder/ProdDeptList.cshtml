@model IEnumerable<Inventory.Models.ProductionOrder>

@{
    ViewBag.Title = "ProdDeptList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .e-grid .e-headercell, .e-grid .e-grouptopleftcell {
        background-color: #3c8dbc;
        border-top-color: teal;
        border-left-color: teal;
        border-bottom-color: teal;
        color: #fff;
    }

    .e-grid .e-gridheader .e-icon {
        color: #fff;
    }

    .Expand {
        background-position: -180px 3px;
    }

    .Collapse {
        background-position: -205px 3px;
    }

    .refresh {
        background-position: -76px 3px;
    }

    .e-toolbaricons {
        background-image: url("../../Content/ej/web/common-images/icons-gray.png");
    }

    .Expand:hover, .Collapse:hover, .refresh:hover {
        background-image: url("../../Content/ej/web/common-images/icons-white.png");
    }
</style>

<div class="box-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12 col-xs-12">
                @(Html.EJ().Grid<Inventory.Models.ProductionOrder>
                                            ("ProductionOrder").Datasource((IEnumerable<object>
                        )ViewBag.datasource)
                        .AllowScrolling()
                        .AllowFiltering()
                        .AllowTextWrap()
                        .FilterSettings(filter => { filter.ShowFilterBarStatus().StatusBarWidth(500).FilterBarMode(FilterBarMode.Immediate).MaxFilterChoices(1000).FilterType(FilterType.Menu); })   /*Filtering Enabled*/
                        .AllowSorting()    /*Sorting Enabled*/
                        .AllowMultiSorting()
                        .AllowPaging()    /*Paging Enabled*/
                        .SelectionType(SelectionType.Multiple)
                        .AllowResizing()
                        .IsResponsive()
                        .MinWidth(1000)
                        .AllowReordering()
                        .AllowResizeToFit()
                        .AllowResizing()
                        .ScrollSettings(scroll => { scroll.Height(300); })
                        .ToolbarSettings(toolbar =>
                        {
                            toolbar.ShowToolbar().ToolbarItems(items =>
                            {
                                items.AddTool(ToolBarItems.Search); items.AddTool(ToolBarItems.ExcelExport);
                            });
                        })
                                                        .Mappers(map => map.ExportToExcelAction("/ProductionOrder/ProdOrderExportToExcel"))
                        .AllowSearching(true)
                        .ToolbarSettings(toolbar =>
                        {
                            toolbar.ShowToolbar(true).CustomToolbarItems(new List<object>
                                () { new Syncfusion.JavaScript.Models.CustomToolbarItem() { TemplateID = "#Refresh" }, new Syncfusion.JavaScript.Models.CustomToolbarItem() { TemplateID = "#AddNew" } });
                        })
                            .ClientSideEvents(eve => { eve.ToolbarClick("onToolBarClick"); })
                            .Columns(col =>
                            {
                                col.HeaderText("").Template("<input type='checkbox' id='{{:ProductionOrderID}}' name='{{:ProductionOrderID}}'/>").TextAlign(TextAlign.Left).Width(35).AllowFiltering(false).Add();
                                col.Field("ProductionOrderID").HeaderText("Order ID").IsPrimaryKey(true).TextAlign(TextAlign.Left).Width(100).Add();
                                col.Field("Date").HeaderText("Date").TextAlign(TextAlign.Left).Visible(true).Width(110).Format("{0:dd/MM/yyyy}").Add();
                                col.Field("RequiredDate").HeaderText("Required Date").TextAlign(TextAlign.Left).Visible(true).Width(110).Format("{0:dd/MM/yyyy}").Add();
                            }))
            </div>
        </div>
    </div>
</div>


<script src="~/assets/js/validation/bootstrapValidator.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script src="~/js/moderniz.2.8.1.js"></script>
<script id="Refresh" type="text/x-jsrender">
    <a href="#" class="e-toolbaricons refresh" />
</script>
<script id="AddNew" type="text/x-jsrender">
    <input type="button" class="btn btn-primary btn-sm add" value="Generate MRN" onclick="GenerateMRN();" />
</script>

<script src="~/js/toastr.min.js"></script>
<script type="text/javascript">

    $(document).ready(function () {
        var Message = '@TempData["Msg"]';
        if (Message != "")
            toastr.error(Message);

        var Temp = '@TempData["Temp"]';
        if (Temp != "" && Temp != undefined && Temp != null) {
            toastr.success(Temp);
       }
       });
</script>
<script type="text/javascript">
    function onToolBarClick(sender) {
        if (sender.itemName == "Expand")
            this.expandAll();
        else if (sender.itemName == "Collapse")
            this.collapseAll();
        else if (sender.itemName == "Refresh") {
            var instance = $("#ProductionOrder").ejGrid("instance");
            instance._filterCollection = [];
            instance.clearFiltering();
            instance.clearSearching();
            this.refreshContent();
        }
    }
</script>
<script>
    function GenerateMRN() {
        debugger;
        var CheckboxId = ""; var Temp="";
        $("input:checkbox:checked").each(function () {
            debugger;
            var $this = $(this);

            if ($this.is(":checked")) {                
                Temp = ($this.attr("id"));
                if (Temp != undefined) {
                    if (CheckboxId == "")
                        CheckboxId = Temp;
                    else
                        CheckboxId =CheckboxId+","+Temp;
                }
            } else {                
            }
            if (CheckboxId!="") {
                window.location.href = "/ProductionOrder/GenerateMRN?id=" + CheckboxId + "";
            }
        });
    }
</script>