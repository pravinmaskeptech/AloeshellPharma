@model Inventory.Models.ReturnReason

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    textarea {
        width: 230px;
        height: 50px;
    }

    .iframe-container {
        padding-bottom: 60%;
        padding-top: 30px;
        height: 0;
        overflow: hidden;
    }

        .iframe-container iframe,
        .iframe-container object,
        .iframe-container embed {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
</style>

<div class="box-body">
    <div class="row" style="background-color:white">
        <div class="col-lg-12 col-sm-12 col-xs-12">
            @using (Html.BeginForm("Create", "ReturnReason", FormMethod.Post, new
            {
                enctype = "multipart/form-data",
                @class = "form-horizontal",
                data_bv_message = "This value is not valid",
                data_toggle = "validator",
                data_bv_feedbackicons_valid = "glyphicon glyphicon-ok",
                data_bv_feedbackicons_invalid = "glyphicon glyphicon-remove",
                data_bv_feedbackicons_validating = "glyphicon glyphicon-refresh"
            }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Return Reason</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control", Autocomplete = "off", data_bv_notempty = "true", data_bv_notempty_message = "Reason is required and cannot be empty", onchange = "CheckDuplicateName();", maxlength = "100" } })
                                    @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>                    
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" id="create" value="Create" class="btn btn-primary" onclick="CheckDuplicateName();" />
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        
        var data = '@ViewData["Message"]'
        if (data != "")
            toastr.error(data);
        $("#form0").bootstrapValidator();
    });
    function CheckDuplicateName(){
        var Reason = $("#Reason").val();
        $.ajax({
            url: '@Url.Action("CheckDuplicateName","ReturnReason")',
            type: "GET",
            dataType: "JSON",
            data: { Reason: Reason, Mode: "Create", Id: 0 },
            success: function (result) {
                try {
                    if (result == "1") {
                        $('#Reason').val("");
                        $("#form0").bootstrapValidator('revalidateField', 'Reason');
                        toastr.error("Reason already exist");
                    }
                    else if (result == "0") {

                    }
                    else {
                        toastr.error(result);
                    }
                }
                catch (e) {

                }
            }
        });
    }
</script>