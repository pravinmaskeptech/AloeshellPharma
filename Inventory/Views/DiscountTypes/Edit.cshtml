@model Inventory.Models.DiscountTypes

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    textarea {
        width: 230px;
        height: 50px;
    }

    .iframe-container {
        padding-bottom: 60%;
        padding-top: 30px;
        height: 0;
        overflow: hidden;
    }

        .iframe-container iframe,
        .iframe-container object,
        .iframe-container embed {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
</style>
<div class="box-body">
    <div class="row" style="background-color:white">
        <div class="col-lg-12 col-sm-12 col-xs-12">
            @using (Html.BeginForm("Edit", "DiscountTypes", FormMethod.Post, new
            {
                enctype = "multipart/form-data",
                @class = "form-horizontal",
                data_bv_message = "This value is not valid",
                data_toggle = "validator",
                data_bv_feedbackicons_valid = "glyphicon glyphicon-ok",
                data_bv_feedbackicons_invalid = "glyphicon glyphicon-remove",
                data_bv_feedbackicons_validating = "glyphicon glyphicon-refresh"
            }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4>Discount Types</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.DiscountId)
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.DiscountType, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.DiscountType, new { htmlAttributes = new { @class = "form-control", Autocomplete = "off", data_bv_notempty = "true", data_bv_notempty_message = "Discount Type is required and cannot be empty", maxlength = "100", placeholder = "Discount Type", onchange = "CheckDuplicateName();" } })
                                        @Html.ValidationMessageFor(model => model.DiscountType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="col-md-2">
                                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                                        </div>
                                        <div class="col-md-6">
                                            <textarea id="Description" name="Description" class="input-validation-error form-control" cols="50" data-val="true" data-val-required="The Message field is required." placeholder="Description" rows="2" required data-bv-notempty-message="Description is required and cannot be empty" maxlength="500"></textarea>
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-4">
                                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-6">
                                        @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control", Autocomplete = "off", data_bv_notempty = "true", data_bv_notempty_message = "Freeze required and cannot be empty", maxlength = "10" } })
                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" id="create" value="Create" class="btn btn-primary" onclick="CheckDuplicateName();" />
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                            </div>
                        </div>
                    </div>
            }

        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        $("#form0").bootstrapValidator();        
        var Message = '@TempData["Msg"]';
        if (Message != "")
            toastr.error(Message);
    })

    $(document).ready(function () {
        var url = window.location.href
        var array = url.split('/');
        var lastsegment = array[array.length - 1];        
        $.ajax({
            type: "GET",
            url: "/DiscountTypes/getDescription",
            data: { 'Id': lastsegment },
            success: function (result) {               
                $('#Description').val(result);
            },
        })
    });
    function CheckDuplicateName() {
        var Name = $('#DiscountType').val();
        var Code = $('#DiscountId').val();
         $.ajax({
            url: '@Url.Action("CheckDuplicateName", "DiscountTypes")',
            type: "GET",
            dataType: "JSON",
            data: { Name: Name, Mode: "Edit", Code: Code },
            success: function (result) {

                try {
                    if (result == "1") {
                        var Code = result[0].DiscountType;
                        if (Code != "" || Code != null) {
                            $('#DiscountType').val('');
                            toastr.error("Discount Type Name already exist");
                            $("#form0").bootstrapValidator('revalidateField', 'DiscountType');
                        }
                    }
                    else if (result == "0") {

                    }
                    else {
                        toastr.error(result);
                    }
                }
                catch (e) {
                }
            }
        });
    }


</script>


