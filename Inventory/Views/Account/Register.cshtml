@model Inventory.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title.</h2>
<style>
    textarea {
        width: 230px;
        height: 50px;
    }

    .iframe-container {
        padding-bottom: 60%;
        padding-top: 30px;
        height: 0;
        overflow: hidden;
    }

        .iframe-container iframe,
        .iframe-container object,
        .iframe-container embed {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
</style>

@*@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {*@
<div class="box-body">
    <div class="row" style="background-color:white">
        <div class="col-lg-12 col-sm-12 col-xs-12">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new
            {
                enctype = "multipart/form-data",
                @class = "form-horizontal",
                data_bv_message = "This value is not valid",
                data_toggle = "validator",
                data_bv_feedbackicons_valid = "glyphicon glyphicon-ok",
                data_bv_feedbackicons_invalid = "glyphicon glyphicon-remove",
                data_bv_feedbackicons_validating = "glyphicon glyphicon-refresh"
            }))
            {
                @Html.AntiForgeryToken()
                <h4>Create a new account.</h4>
                <hr />
                @Html.ValidationSummary("", new { @class = "text-danger" })
                <input type="hidden" id="HOD" value="Admin"/>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.Employee, new { @class = "col-md-2 control-label" })
                            </div>
                            <div class="col-md-8">
                                @Html.EJ().Autocomplete("Employee").WatermarkText("Select Employee").Datasource((IEnumerable<Inventory.Models.Employee>)ViewBag.Empdata).Width("100%").AutocompleteFields(field => field.Key("EmployeeID").Text("EmployeeName")).HighlightSearch(true).ShowPopupButton(true).Width("100%").ClientSideEvents(e => e.Select("getEmpEmail"))
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" , Autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" , @readonly= "readonly" , Autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                            </div>
                            <div class="col-md-8">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" , Autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                            </div>
                            <div class="col-md-8">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" , Autocomplete = "off" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" class="btn btn-success" value="Register"  />
                    </div>
                </div>
            }

            </div></div></div>
<script>
    $(document).ready(function () {
        $("#form0").bootstrapValidator();

        var Message = '@TempData["Msg"]';
        if (Message != "") {
            toastr.error(Message);
        }
    })
    function getEmpEmail(Id)
    {
        
        $.ajax({
            type: "GET",
            url: '/Account/getEmpEmail',
            data: { 'empid': Id.key },
            success: function (result) {
                $('#Email').val(result);
            }
        })
}
</script>
         
