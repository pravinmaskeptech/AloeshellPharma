@model Inventory.Models.StockAllocation

@{
    ViewBag.Title = "StockAllocation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    textarea {
        width: 230px;
        height: 50px;
    }

    .iframe-container {
        padding-bottom: 60%;
        padding-top: 30px;
        height: 0;
        overflow: hidden;
    }

        .iframe-container iframe,
        .iframe-container object,
        .iframe-container embed {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
</style>
<div class="box-body">
    <div class="row" style="background-color:white">
        <div class="col-lg-12 col-sm-12 col-xs-12">
            @using (Html.BeginForm("Create", "", FormMethod.Post, new
            {
                enctype = "multipart/form-data",
                @class = "form-horizontal",
                data_bv_message = "This value is not valid",
                data_toggle = "validator",
                data_bv_feedbackicons_valid = "glyphicon glyphicon-ok",
                data_bv_feedbackicons_invalid = "glyphicon glyphicon-remove",
                data_bv_feedbackicons_validating = "glyphicon glyphicon-refresh"
            }))
            {
                @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <h4>Stock Allocation</h4>
                <hr />
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    @Html.Label("Order NO", htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-6">
                                    <input type="text" id="OrderNo" name="OrderNo" value="@ViewBag.OrderNo" disabled class="form-control" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <panel id="pnlManufactureProduct">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-8">
                                        @Html.Label("Manufacture Items", htmlAttributes: new { @class = "control-label " })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <table class='table table-bordered  table-responsive' id="tblProductManufacture" style="width: 100%; overflow-x:auto; white-space:nowrap;">
                            <thead>
                                <tr>
                                    <th>Sr. No</th>
                                    <th>Product</th>
                                    <th>Order Qty</th>
                                    <th>Available</th>
                                    <th>Allocated</th>
                                    <th>Allocate</th>
                                    <th>Shortage</th>
                                    <th>Production Order</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-4">
                            <input type="button" id="btnProdOrder" value="Generate Prod Order" class="btn btn-primary" onclick="GenerateProdOrder();" />                            
                        </div>
                    </div>
                </panel>

                <panel id="pnlProduct">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-8">
                                        @Html.Label("Bought Out Items", htmlAttributes: new { @class = "control-label " })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <table class='table table-bordered  table-responsive' id="tblProduct" style="width: 100%; overflow-x:auto; white-space:nowrap;">
                            <thead>
                                <tr>
                                    <th>Sr. No</th>
                                    <th>Product</th>
                                    <th>Order Qty</th>
                                    <th>Available</th>
                                    <th>Allocated</th>
                                    <th>Allocate</th>
                                    <th>Shortage</th>
                                    <th>Purchase Order</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="col-md-1">
                        </div>
                        <div class="col-md-4">
                            <input type="button" id="create" value="Generate PO" class="btn btn-primary" onclick="AllocateStock();" />&nbsp;&nbsp;
                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </panel>                              
            </div>
            }
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("#form0").bootstrapValidator();
        var Message = '@TempData["Msg"]';
        if (Message != "")
            toastr.error(Message);

        $("#tblProduct").find("tr:gt(0)").remove();
        $("#tblProductManufacture").find("tr:gt(0)").remove();
        $.ajax({
            url: '@Url.Action("GetOrder", "StockAllocation")',
            type: "GET",
            data: { OrderNo: $("#OrderNo").val() },
            datatype: "JSON",
            success: function (result) {
                if (result.Message == "success") {
                    var SrNo = 0;                    
                    if (result.orderListManufacture.length == 0)
                        $("#pnlManufactureProduct").hide();
                    else
                        $("#pnlManufactureProduct").show();

                    if (result.orderList.length == 0)
                        $("#pnlProduct").hide();
                    else
                        $("#pnlProduct").show();

                    $.each(result.orderList, function (i, result) {
                        SrNo = SrNo + 1;
                        var Shortage = (parseInt(result.OrderQty) - (result.AllocatedQty));
                        if (Shortage < 0)
                            Shortage = 0;

                        $("#tblProduct").append('<tr><td>' + SrNo + '</td>' +                      
                            '<td><input type="text" id="ProductName' + SrNo + '" value="' + result.ProductName + '"  class="form-control" disabled /></td>' +
                            '<td><input type="text" id="OrderQty' + SrNo + '" value="' + result.OrderQty + '" class="form-control" disabled /></td>' +
                            '<td><input type="text" id="AvailableQty' + SrNo + '" value="' + result.AvailableQty + '"  class="form-control" disabled /></td>' +
                            '<td><input type="text" id="AllocatedQty' + SrNo + '" value="' + result.AllocatedQty + '"  class="form-control" disabled /></td>' +
                            '<td><input type="text" id="Allocate' + SrNo + '" onkeypress = "return event.charCode >= 46 && event.charCode <= 57 && event.charCode != 47" onchange="CheckAllocated(' + SrNo + ');" class="form-control" /></td>' +
                            '<td><input type="text" id="Shortage' + SrNo + '" value="' + Shortage + '"  class="form-control" disabled /></td>' +
                            '<td><input type="checkbox" id="Chk' + SrNo + '" /><input type="hidden" id="OrderDetailsID' + SrNo + '" value=' + result.OrderDetailsID + ' /></td></tr>');

                    });

                    SrNo = 0;
                    $.each(result.orderListManufacture, function (i, result) {
                        SrNo = SrNo + 1;
                        var Shortage = (parseInt(result.OrderQty) - (result.AllocatedQty));
                        if (Shortage < 0)
                            Shortage = 0;

                        $("#tblProductManufacture").append('<tr><td>' + SrNo + '</td>' +
                            '<td><input type="text" id="ProductNameM' + SrNo + '" value="' + result.ProductName + '"  class="form-control" disabled /></td>' +
                            '<td><input type="text" id="OrderQtyM' + SrNo + '" value="' + result.OrderQty + '" class="form-control" disabled /></td>' +
                            '<td><input type="text" id="AvailableQtyM' + SrNo + '" value="' + result.AvailableQty + '"  class="form-control" disabled /></td>' +
                            '<td><input type="text" id="AllocatedQtyM' + SrNo + '" value="' + result.AllocatedQty + '"  class="form-control" disabled /></td>' +
                            '<td><input type="text" id="AllocateM' + SrNo + '" onkeypress = "return event.charCode >= 46 && event.charCode <= 57 && event.charCode != 47" onchange="CheckAllocatedM(' + SrNo + ');" class="form-control" /></td>' +
                            '<td><input type="text" id="ShortageM' + SrNo + '" value="' + Shortage + '"  class="form-control" disabled /></td>' +
                            '<td><input type="checkbox" id="ChkM' + SrNo + '" /><input type="hidden" id="OrderDetailsIDM' + SrNo + '" value=' + result.OrderDetailsID + ' /></td></tr>');
                    });
                }
                else {
                    toastr.error(result.Message);
                }
            }
        })
    })

    function CheckAllocated(SrNo) {
        var Allocate = parseInt($('#Allocate' + SrNo + '').val());
        var AvailableQty = parseInt($('#AvailableQty' + SrNo + '').val());


        var OrderQty = parseInt($('#OrderQty' + SrNo + '').val());
        var AllocatedQty = parseInt($('#AllocatedQty' + SrNo + '').val());
        OrderQty = OrderQty - AllocatedQty;

        $('#Shortage' + SrNo + '').val(OrderQty);

        if (Allocate > AvailableQty) {
            $('#Allocate' + SrNo + '').val("");
            toastr.error("You can't allocate more than Available quantity");
            return false;
        }

        

        if (Allocate > OrderQty) {
            $('#Allocate' + SrNo + '').val("");
            toastr.error("You can't allocate more than Available quantity");
            return false;
        }
        OrderQty = OrderQty - Allocate;

        $('#Shortage' + SrNo + '').val(OrderQty);
    }

    function CheckAllocatedM(SrNo) {
        var Allocate = parseInt($('#AllocateM' + SrNo + '').val());
        var AvailableQty = parseInt($('#AvailableQtyM' + SrNo + '').val());


        var OrderQty = parseInt($('#OrderQtyM' + SrNo + '').val());
        var AllocatedQty = parseInt($('#AllocatedQtyM' + SrNo + '').val());
        OrderQty = OrderQty - AllocatedQty;

        $('#ShortageM' + SrNo + '').val(OrderQty);

        if (Allocate > AvailableQty) {
            $('#AllocateM' + SrNo + '').val("");
            toastr.error("You can't allocate more than Available quantity");
            return false;
        }
        

        if (Allocate > OrderQty) {
            $('#AllocateM' + SrNo + '').val("");
            toastr.error("You can't allocate more than Available quantity");
            return false;
        }
        OrderQty = OrderQty - Allocate;

        $('#ShortageM' + SrNo + '').val(OrderQty);
    }

    function AllocateStock() {
        var list = [];        
        var Count = 1;
        $('#tblProduct tbody tr').each(function (index, ele) {
            var Allocate = $('#Allocate' + Count + '').val();
            var IsGenerate = $('#Chk' + Count + '').prop("checked")
            if (IsGenerate==true) {
                var orderItem = {
                    OrderNo: $("#OrderNo").val(),
                    ProductName: $('#ProductName' + Count + '').val(),
                    OrderQty: $('#OrderQty' + Count + '').val(),
                    AvailableQty: $('#AvailableQty' + Count + '').val(),
                    Allocate: $('#Allocate' + Count + '').val(),
                    AllocatedQty: $('#AllocatedQty' + Count + '').val(),
                    OrderDetailsID: $('#OrderDetailsID' + Count + '').val(),
                    Shortage: $('#Shortage' + Count + '').val()
                }
                list.push(orderItem);
            }
            Count = Count + 1;                        
        })
      
        var data = {
            ODetails: list
        }

        $.ajax({
            type: 'POST',
            url: '/StockAllocation/AllocateStock',
            data: JSON.stringify(data),
            contentType: 'application/json',
            success: function (result) {
                if (result.Message == "success") {
                    toastr.success("Stock Allocated Successfully");
                    window.location.href = "/StockAllocation/Index";
                }
                else {
                    toastr.error(result.Message);
                }
            },
            error: function (error) {
                console.log(error);               
            }
        });
    }

    function GenerateProdOrder() {
        debugger;
        var list = [];
        var Count = 1;       
        $('#tblProductManufacture tbody tr').each(function (index, ele) {
            var Allocate = $('#AllocateM' + Count + '').val();
            var IsGenerate = $('#ChkM' + Count + '').prop("checked")
            if (IsGenerate ==true) {
                var orderItem = {
                    OrderNo: $("#OrderNo").val(),
                    ProductName: $('#ProductNameM' + Count + '').val(),
                    OrderQty: $('#OrderQtyM' + Count + '').val(),
                    AvailableQty: $('#AvailableQtyM' + Count + '').val(),
                    Allocate: $('#AllocateM' + Count + '').val(),
                    AllocatedQty: $('#AllocatedQtyM' + Count + '').val(),
                    OrderDetailsID: $('#OrderDetailsIDM' + Count + '').val(),
                    Shortage: $('#ShortageM' + Count + '').val()
                }
                list.push(orderItem);
            }
            Count = Count + 1;
        })

        var data = {
            ODetails: list
        }
        $.ajax({
            type: 'POST',
            url: '/StockAllocation/GenerateProdOrder',
            data: JSON.stringify(data),
            contentType: 'application/json',
            success: function (result) {
                if (result.Message == "success") {
                    toastr.success("Stock Allocated Successfully");
                    window.location.href = "/StockAllocation/Index";
                }
                else {
                    toastr.error(result.Message);
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }
</script>

