@model Inventory.Models.CustomerProductRelations
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Create", "POMain", FormMethod.Post, new
{
    enctype = "multipart/form-data",
    @class = "form-horizontal",
    data_bv_message = "This value is not valid",
    data_toggle = "validator",
    data_bv_feedbackicons_valid = "glyphicon glyphicon-ok",
    data_bv_feedbackicons_invalid = "glyphicon glyphicon-remove",
    data_bv_feedbackicons_validating = "glyphicon glyphicon-refresh"
}))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="Count" name="Count" value="1" />
    <input type="hidden" id="CustomerId" name="CustomerId" value="" />
    <input type="hidden" id="ProductId" name="ProductId" value="" />
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Customer Product Relations</h3>
            <div class="box-tools pull-right">
            </div>
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.CustomerId,"Customer", htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-9">
                                @Html.EJ().Autocomplete("Customer").WatermarkText("Select Customer").Datasource((IEnumerable<Inventory.Models.Customer>)ViewBag.Custdatasource).Width("100%").AutocompleteFields(field => field.Key("CustomerID").Text("CustomerName")).HighlightSearch(true).ShowPopupButton(true).Width("50%").ClientSideEvents(e => e.Select("getSupplierId").FocusOut("checkSupplier"))
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <table class="table table-responsive" display block; overflow-x auto; white-space nowrap; style="width:1030px">
            <tr>
                <td>PRODUCT NAME</td>
                <td>PRICE</td>
                @*<td>Tax</td>*@
                <td>&nbsp;</td>
            </tr>
            <tr class="mycontainer" id="mainrow">
                <td>
                    @Html.EJ().Autocomplete("Product").Width("100%").Datasource((IEnumerable<Inventory.Models.Products>)ViewBag.Productdatasource).ShowPopupButton(true).AutocompleteFields(field => field.Text("ProductName").Key("ProductCode")).ClientSideEvents(e => e.Select("getProductId").FocusOut("checkProduct"))
                </td>
                <td>
                    <input type="text" id="ProductPrice" class="ProductPrice form-control" onkeypress="return event.charCode >= 46 && event.charCode <= 57 && event.charCode!=47" />
                </td>
              
                @*<td>
                    <input type="text" id="Tax" class="Tax form-control" onkeypress="return event.charCode >= 46 && event.charCode <= 57 && event.charCode!=47" placeholder="Tax" readonly/>
                </td>*@
                <td>
                    <input type="button" id="add" value="add" style="width:80px" class="btn btn-success" />
                </td>
            </tr>
        </table>
        <div id="orderItems">
            <table class="table table-responsive" id="orderdetailsItems" display block; overflow-x auto; white-space nowrap; style="width:1030px"></table>
            <span id="orderItemError" style="color:red"></span>
        </div>

    </div>
    <div class="row" style="width:1430px">
        <div class="col-md-6">
            <div class="form-group">
                <div class="col-md-4">
                    @*@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })*@
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <div class="col-md-4">
                    <div style="padding:5px 10px; text-align:right">
                        <input id="submit" type="button" value="Save Order" class="btn btn-warning" style="padding:4px 4px" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    function Remove(Count) {
           $("#R" + Count + "").remove();
    }
    function getSupplierId(SupplyId) {
        debugger
        $("#orderdetailsItems tr").remove();
        $('#CustomerId').val(SupplyId.key);
        $('#Product').val('');
        $('#ProductPrice').val('');    
     /*   $('#Tax').val('');*/
        $.ajax({
            type: "GET",
            url: '/CustomerProductRelations/getAllData',
            data: { 'CustomerId': SupplyId.key },
            success: function (result) {
                debugger
                var Count = parseInt($("#Count").val());
                $.each(result, function (i, item) {
                    $(" <tbody> <tr id='R" + Count + "'> <td> <input type='hidden' id='SupplierProductIdNew" + Count + "' readonly style='width:0px' class='SupplierProductIdNew form-control'' /></td><td><input type='text' id='productNew" + Count + "' readonly class='productnew form-control'' /></td> <td><input type='text' id='PriceNew" + Count + "' readonly class='PriceNew form-control'' /></td> <td><input type='button' id='" + Count + "' onclick='Remove(" + Count + ")' value='Remove' style='width: 85' class='btn btn-danger' /></td><td> <input type='hidden' id='productIdNew" + Count + "' readonly class='productIdNew form-control'' style='width:0px' /></td></tr> <tbody>").appendTo("#orderdetailsItems");
                    $("#SupplierProductIdNew" + Count + "").val(result[i].CustomerProductRelationId);
                    $("#PriceNew" + Count + "").val(result[i].ProductPrice);
                    $("#productIdNew" + Count + "").val(result[i].ProductCode);    
                   /* $("#Tax" + Count + "").val(result[i].Tax);       */
                    GetProductName(Count, result[i].ProductCode);
                    Count = Count + 1;
                });
                $('#Count').val(parseInt($('#Count').val()) + 1)

            },
            error: function (error) {
                console.log(error);
            }
        })
    }
    function GetProductName(Count, ProductCode) {
        debugger
        $.ajax({
            type: "GET",
            url: "/CustomerProductRelations/GetProductName",
            data: { 'productCode': ProductCode },
            success: function (result) {
                $("#productNew" + Count + "").val(result.ProductName);
               /* $("#Tax" + Count + "").val(result.Tax);*/
                /*$("#PriceNew" + Count + "").val(result.SellingPrice);*/
            },
            error: function (error) { console.log(error); }
        })
    }
    function checkSupplier() {
        debugger
        $.ajax({
            type: "GET",
            url: "/CustomerProductRelations/checkSupplier",
            data: { 'customer': $('#Customer').val() },
            success: function (result) {
                if (result == "0") {
                    $('#Customer').val('');
                    toastr.error("Please Select Customer Name..");
                    $('#Customer').css("border", "1px solid #e46f61");
                } else {
                    $('#Customer').css("border", "1px solid #d2d6de");
                }
            },
            error: function (error) { console.log(error); }
        })
    }
    function getProductId(PrdId) {
        $('#ProductId').val(PrdId.key);       
    }
    function checkProduct() {
        $.ajax({
            type: "GET",
            url: "/CustomerProductRelations/checkProduct",
            data: { 'product': $('#Product').val() },
            success: function (result) {
                if (result == "0") {
                    $('#Product').val('');
                    //toastr.error("Please Select Product Name..");
                    $('#Product').css("border", "1px solid #e46f61");
                } else {
                    $('#Product').css("border", "1px solid #d2d6de");
                }
            },
            error: function (error) { console.log(error); }
        })
    }
    $(document).ready(function () {
        $('#add').click(function () {
            if ($('#CustomerId').val() != "") {
                var isValid = false;
                var lenghtcnt = $('#orderdetailsItems tr').length;
                $("#Count").val(parseInt(lenghtcnt) + 1);
                if ($('#Product').val() == "") { toastr.error("Please Select Product Name"); $('#Product').css("border", "1px solid #e46f61"); isValid = false; } else { $('#Product').css("border", "1px solid #a5da6b"); isValid = true; }
                if ($('#ProductPrice').val() == "") { toastr.error("Please Enter Quantity"); $('#ProductPrice').css("border", "1px solid #e46f61"); isValid = false; } else { $('#ProductPrice').css("border", "1px solid #a5da6b"); isValid = true; }
              if (isValid == true && $('#Product').val() != "" && $('#OrderQty').val() != "" && $('#Price').val() != "" && $('#Amount').val() != "") {
                    var Count = $('#Count').val();
                    $("#orderdetailsItems").append(" <tbody> <tr id='R" + Count + "'> <td> <input type='hidden' id='SupplierProductIdNew" + Count + "' readonly style='width:0px' class='SupplierProductIdNew form-control'' /></td><td><input type='text' id='productNew" + Count + "' readonly class='productnew form-control'' /></td> <td align:'left'><input type='text' id='PriceNew" + Count + "'  class='PriceNew form-control'' /></td> <td><input type='button' id='" + Count + "' onclick='Remove(" + Count + ")' value='Remove' style='width: 85' class='btn btn-danger' /></td><td> <input type='hidden' id='productIdNew" + Count + "' readonly class='productIdNew form-control'' style='width:0px' /></td></tr> <tbody>");
                    $("#PriceNew" + Count + "").val($('#ProductPrice').val());
                    $("#productNew" + Count + "").val($('#Product').val());
                    $("#productIdNew" + Count + "").val($('#ProductId').val());
                 
                   /* $("#Tax" + Count + "").val($('#Tax').val());*/
                    $("#SupplierProductIdNew" + Count + "").val(0);              
                 
                    // Clear Data
                    $('#Product').val('');
                    $('#ProductPrice').val('');
                    $('#ProductId').val('');
                   /* $('#Tax').val('');*/
                    $('#Product').css("border", "1px solid #d2d6de");
                    $('#ProductPrice').css("border", "1px solid #d2d6de");
              
                }
                $('#Count').val(parseInt($('#Count').val()) + 1)
            } else {
                toastr.error("Please Select Supplier");
            }
        });



        $('#submit').click(function () {
            var rowCount = $('#orderdetailsItems tr').length;
            if (rowCount == 0) {
                toastr.error('Please Add Product..!');
            } else {               
                var isAllValid = true;
                $('#orderItemError').text('');
                var list = [];
                var errorItemCount = 0;

                $('#orderdetailsItems tbody tr').each(function (index, ele) {
                    if ((parseFloat($('.PriceNew', this).val()) || 0) == 0 ||
                        $('.productNew', this).val() == "" ||
                        isNaN($('.PriceNew', this).val())) {
                        errorItemCount++;
                        $(this).addClass('error');
                    } else {
                        var orderItem = {
                            ProductCode: $('.productIdNew', this).val(),
                            ProductPrice: $('.PriceNew', this).val(),
                            CustomerId: $('#CustomerId').val().trim(),
                            SupplierProductId: $('.SupplierProductIdNew', this).val(),                      
                            /*Tax: $('.Tax', this).val(), */
                        }
                        list.push(orderItem);
                    }
                })
                if (isAllValid) {
                    var data = {
                        relation: list
                    }
                    $(this).val('Please wait...');
                    $.ajax({
                        type: 'POST',
                        url: '/CustomerProductRelations/save',
                        data: JSON.stringify(data),
                        contentType: 'application/json',
                        success: function (data) {
                            debugger;
                            if (data.status == true) {
                                toastr.success("Successfully saved..");
                                list = [];
                                $('#orderdetailsItems').empty();
                                $('#Customer').val('');
                                $('#Product').val('');
                                $('#ProductPrice').val('');
                                $('#ProductId').val('');
                                $('#CustomerId').val('');
                                $('#Count').val(1);
                            }
                            else {
                                toastr.error(data.Message);
                            }
                            $('#submit').val('Save');
                        },
                        error: function (error) {
                            console.log(error);
                            $('#submit').val('Save');
                        }
                    });
                }
            }

            
           
        });
    })
</script>