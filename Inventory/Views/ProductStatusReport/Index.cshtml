
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .e-grid .e-headercell, .e-grid .e-grouptopleftcell {
        background-color: #3c8dbc;
        border-top-color: #3c8dbc;
        border-left-color: #3c8dbc;
        border-bottom-color: #3c8dbc;
        color: #fff;
    }

    .e-grid .e-gridheader .e-icon {
        color: #fff;
    }

    .Expand {
        background-position: -180px 3px;
    }

    .Collapse {
        background-position: -205px 3px;
    }

    .refresh {
        background-position: -76px 3px;
    }

    .e-toolbaricons {
        background-image: url("../../Content/ej/web/common-images/icons-gray.png");
    }

    .Expand:hover, .Collapse:hover, .refresh:hover {
        background-image: url("../../Content/ej/web/common-images/icons-white.png");
    }
</style>

<style>
    .dt-buttons {
        text-align: right;
        margin-bottom: 10px;
    }

    .btn-custom {
        background-color: blue;
        color: white;
    }

    .dt-buttons .btn-primary {
        background-color: blue;
        border-color: blue;
    }

    .export-button {
        float: right;
        margin-top: 10px;
    }
</style>

<th>
    <h3 class="mb-0">Sold Serial No Report </h3>
</th>
<div>
    <input type="hidden" id="ProductCode" />
    <div class="container-fluid">

        <div class="row">
            <div class="col-md-12 col-xs-12">

                <div class="row">
                    @*<div class="col-lg-3">
                            <div class="form-group">
                                <label for="FromDate" class="col-md-4 control-label">From Date:</label>
                                <div class="col-md-8">
                                    <input type="text" id="FromDate" name="FromDate" required class="form-control" style="width:100%" autocomplete="off" data-bv-notempty="true" data-bv-notempty-message="Date is required and cannot be empty" />
                                </div>
                            </div>
                        </div>*@
                        <div class="col-lg-3">
                            <div class="form-group">
                                <label for="SerialNo" class="col-md-4 control-label">SerialNo:</label>
                                <div class="col-md-8">
                                    <input type="text" id="SerialNo" name="SerialNo" required class="form-control" style="width:100%" autocomplete="off" data-bv-notempty="false" data-bv-notempty-message="Date is required and cannot be empty" />
                                </div>
                            </div>
                        </div>
                    @*<div class="col-lg-6">
                        <div class="form-group">
                            <label for="ProductName" class="col-md-4 control-label">Product Name:</label>
                            <div class="col-md-8">
                                @Html.EJ().Autocomplete("Product").Width("100%").Datasource((IEnumerable<Inventory.Models.Products>)ViewBag.Productdatasource).ShowPopupButton(true).AutocompleteFields(field => field.Text("ProductName").Key("ProductCode")).ClientSideEvents(e => e.Select("getProductId").FocusOut("checkproduct"))
                            </div>
                        </div>
                    </div>*@

                    <div class="col-lg-6">
                            <div class="form-group">
                                <div class="col-lg-8">
                                    <input type="button" id="btnSearch" value="Search" onclick="SearchData();" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                </div>



                <table id="example" class="table table-striped table-bordered dt-responsive" style="width:100%">
                    <thead>
                        <tr class="text-uppercase" style="font-size: 12px; background-color: #d8e9c1">
                            <th>ProductCode</th>
                            <th>InvoiceNo</th>
                            <th>Customer Name</th>
                            <th>Serial Nos</th>
                            <th>Quantity</th>
                            @*<th>UnUsedSerialNos</th>
                            <th>Quantity for UnUsed SerialNos</th>*@
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.0/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.0/js/buttons.html5.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/vfs_fonts.js"></script>

<script src="~/plugins/jquery/jquery.min.js"></script>
@*<script src="~/plugins/datatables/jquery.dataTables.min.js"></script>*@
<link href='https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/ui-lightness/jquery-ui.css'
      rel='stylesheet'>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js">
</script>

<script>
    $(document).ready(function () {
        $("#FromDate").ejDatePicker({ maxDate: new Date(), locale: "en-IN", });
        $("#ToDate").ejDatePicker({ maxDate: new Date(), locale: "en-IN", });

        report();
    });
     function report() {
         debugger


             try {
                 $('#example').DataTable({
                     paging: true,
                     searching: false,
                     bServerSide: true,
                     responsive: true,
                     lengthChange: false,
                     dom: 'Bfrtip',
                     "sScrollX": "100%",
                     "bScrollCollapse": true,
                     "sServerMethod": 'POST',
                     "sAjaxSource":  '@Url.Action("GetData", "ProductStatusReport")',

                        "pageLength": 15,
                        // buttons: ['excel'],
                        "buttons": [
                            {
                                extend: 'excelHtml5',
                                text: 'Export to Excel',
                                exportOptions: {
                                    modifier: {
                                        page: 'all'
                                    }
                                }
                            }
                        ],
            //language: {
            //    search: "_INPUT_",
            ////    searchPlaceholder: "Search"
            //},
            "autoWidth": false,
            "aoColumns": [
                //{ data: "ProductCode" },
                {
                    data: "ProductCode",
                    render: function (obj, type, row) {
                        debugger
                        if (obj && obj.length > 0) {
                            var serialNumbers = obj.map(function (item) {
                                return item;
                            });
                            return serialNumbers.join(', ');
                        } else {
                            return '';
                        }
                    }
                },
                { data: "InvoiceNo" },
                { data: "CustomerName" },
                    {
                        data: "UsedSerialNos",
                    render: function (obj, type, row) {
                            debugger
                        if (obj && obj.length > 0) {
                            var serialNumbers = obj.map(function (item) {
                                    return item;
                                });
                                return serialNumbers.join(', ');
                            } else {
                                return '';
                            }
                        }
                },
                { data: "QtyUsed" },
                //    {
                //        data: "UnUsedSerialNos",
                //        render: function (obj, type, row) {
                //            if (obj && obj.length > 0) {
                //                var serialNumbers = obj.map(function (item) {
                //                    return item;
                //                });
                //                return serialNumbers.join(', ');
                //            } else {
                //                return '';
                //            }
                //        }
                //},
                //{ data: "QtyUnUsed" },
                ]

                    });


        }
                catch (e) {
                }
    }

     function SearchData() {

         debugger

                $.ajax({
                    url: '@Url.Action("SearchData", "ProductStatusReport")',
                    type: "GET",
                    dataType: "JSON",
                    data: { SerialNo: $('#SerialNo').val() },

                    success: function (result) {
                        debugger;
                        if (result.Message == "success") {
                            var table = $('#example').DataTable();
                            table.ajax.reload(function (Json) {

                            });
                           // window.location.reload(true);

                        }
                        else {
                            toastr.error(result.Message);
                        }
                    }
                });

        }

    function getProductId(PrdId) {
    debugger
        var ProductCode = PrdId.item.ProductCode;

        $('#ProductCode').val(ProductCode);
        SearchData();

    }



</script>